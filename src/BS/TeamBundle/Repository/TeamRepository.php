<?php

namespace BS\TeamBundle\Repository;

use Doctrine\ORM\EntityRepository;
/**
 * TeamRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TeamRepository extends \Doctrine\ORM\EntityRepository
{

    public function getRanking($competitonId)
    {
        $query = $this->_em->createQuery('SELECT t FROM BSTeamBundle:Team t WHERE t.competitionId = :competitionId ORDER BY t.rank');
        $query->setParameter('competitionId', $competitonId);

        return $query->getResult();
    }

    public function getCompetition()
    {
        $query = $this->_em->createQuery('SELECT t.competitionId FROM BSTeamBundle:Team t');

        return $query->getResult();
    }

    public function verifyDuplicate($teamName, $competitionId)
    {
        $query = $this->_em->createQuery('SELECT t FROM BSTeamBundle:Team t WHERE t.name = :teamName AND t.competitionId = :competitionId');
        $query->setParameters(Array('teamName' => $teamName, 'competitionId' => $competitionId));
        return $query->getResult();
    }

    public function getIdByName($name){
        $query = $this->_em->createQuery('SELECT t.id FROM BSTeamBundle:Team t WHERE t.name = :name');
        $query->setParameter('name', $name);
        return $query->getResult();
    }

    public function getTeamByCompetition($competitionId, $teamId){
        $query = $this->_em->createQuery('SELECT t FROM BSTeamBundle:Team t WHERE t.competitionId = :competitionId AND t.id = :teamId');
        $query->setParameters(Array('competitionId' => $competitionId, 'teamId' => $teamId));
        return $query->getResult();
    }

    public function getTeamGroupByCompetition(){
        $query = $this->_em->createQuery('SELECT DISTINCT t.competitionId FROM BSTeamBundle:Team t');
        return $query->getResult();
    }

    public function getTeam($competitionID){
        $query = $this->_em->createQuery('SELECT t FROM BSTeamBundle:Team t WHERE t.competitionId = :competitionID ORDER BY t.points DESC, t.name ASC');
        $query->setParameter('competitionID', $competitionID);
        return $query->getResult();
    }

    public function getHomeTeam($competitionID){
        $query = $this->_em->createQuery('SELECT t FROM BSTeamBundle:Team t WHERE t.competitionId = :competitionID ORDER BY t.homePoints DESC, t.name ASC');
        $query->setParameter('competitionID', $competitionID);
        return $query->getResult();
    }

    public function getOutsideTeam($competitionID){
        $query = $this->_em->createQuery('SELECT t FROM BSTeamBundle:Team t WHERE t.competitionId = :competitionID ORDER BY t.outsidePoints DESC, t.name ASC');
        $query->setParameter('competitionID', $competitionID);
        return $query->getResult();
    }
}
